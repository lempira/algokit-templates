examples:
  - id: python-smart-contract
    project_name: "Python Hello World"
    type: "smart-contract"
    author: "Algorand Foundation"
    title: "Python Hello World"
    description: "This template provides a beta template for developing and deploying Algorand Python smart contracts."
    tags:
      - python
      - smart-contract
    features:
      - "String Handling"
      - "ARC 4 Contract"
      - "ABI Method Integration"
    detailsPages:
      smartContract: examples/python-smart-contract/projects/python-hello-world-contracts/smart_contracts/hello_world/contract.py
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/contracts/python"
      - source: "generators/create-smart-contract"
        data:
          language: python
          contract_name: "hello_world"
      - source: "generators/create-smart-contract"
        data:
          language: python
          contract_name: "hello_world"
      - source: "templates/examples/contracts/hello-world"
        data:
          framework_choice: python
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"

  - id: typescript-smart-contract
    project_name: "Typescript Hello World"
    type: "smart-contract"
    author: "Algorand Foundation"
    title: "Typescript Hello World"
    description: "This template provides a beta template for developing and deploying Algorand TypeScript smart contracts."
    tags:
      - typescript
      - smart-contract
    features:
      - "String Handling"
      - "ARC 4 Contract"
      - "ABI Method Integration"
    detailsPages:
      smartContract: examples/typescript-smart-contract/projects/typescript-hello-world-contracts/smart_contracts/hello_world/contract.algo.ts
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/contracts/typescript"
      - source: "generators/create-smart-contract"
        data:
          language: typescript
          contract_name: "hello_world"
      - source: "templates/examples/contracts/hello-world"
        data:
          framework_choice: typescript
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"

  - id: react-vite-basic
    project_name: "React Vite Basic"
    type: "frontend"
    author: "Algorand Foundation"
    title: "React Vite Basic"
    description: "A baseline React web app for integrating with any ARC56 compliant Algorand smart contracts."
    tags:
      - react
      - vite
      - frontend
      - typescript
    features:
      - "Use Wallet Integration"
      - "Testnet Deployment"
      - "Transactions Sending"
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/frontend/react-vite"
      - source: "templates/examples/frontend/basic"
        data:
          framework_choice: react
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"
        data:
          target_network: testnet

  - id: python-fullstack
    project_name: "Python Hello World"
    type: "fullstack"
    author: "Algorand Foundation"
    title: "Python Hello World"
    description: "A fullstack Python web app for developing integrating with any ARC56 compliant Algorand smart contracts."
    tags:
      - python
      - typescript
      - fullstack
    features:
      - "String Handling"
      - "ARC 4 Contract"
      - "ABI Method Integration"
      - "Use Wallet Integration"
      - "Contract Interaction"
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/contracts/python"
      - source: "generators/create-smart-contract"
        data:
          language: python
          contract_name: "hello_world"
      - source: "templates/base/frontend/react-vite"
      - source: "templates/examples/frontend/basic"
        data:
          framework_choice: react
      - source: "templates/examples/fullstack/basic"
        data:
          framework_choice: python
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"

  - id: typescript-fullstack
    project_name: "Typescript Hello World"
    type: "fullstack"
    author: "Algorand Foundation"
    title: "Typescript Hello World"
    description: "A fullstack Typescript web app for developing integrating with any ARC56 compliant Algorand smart contracts."
    tags:
      - typescript
      - fullstack
    features:
      - "String Handling"
      - "ARC 4 Contract"
      - "ABI Method Integration"
      - "Use Wallet Integration"
      - "Contract Interaction"
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/contracts/typescript"
      - source: "generators/create-smart-contract"
        data:
          language: typescript
          contract_name: "hello_world"
      - source: "templates/base/frontend/react-vite"
      - source: "templates/examples/frontend/basic"
        data:
          framework_choice: react
          is_fullstack: true
      - source: "templates/examples/fullstack/basic"
        data:
          framework_choice: typescript
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"

  - id: python-utils-notebook
    project_name: "Python Utils Notebook"
    type: "notebook"
    author: "Algorand Foundation"
    title: "Python Utils Notebook"
    description: "A notebook for developing and deploying Algokit Utils Python"
    tags:
      - python
      - utils
      - notebook
    features:
      - "Algokit Utils"
    templates:
      - source: "templates/base/notebook"
        data:
          framework_choice: python
      - source: "generators/create-devcontainer"
        data:
          template_type: notebook

  - id: digital-marketplace-smart-contract
    project_name: "Digital Marketplace"
    type: "smart-contract"
    author: "Algorand Foundation"
    title: "Digital Marketplace"
    description: "A smart contract for a digital marketplace application for creating and trading digital assets on Algorand."
    tags:
      - python
      - smart-contract
    features:
      - "Algorand Python"
      - "ABI Method Integration"
    detailsPages:
      smartContract: examples/digital-marketplace-smart-contract/projects/digital-marketplace-contracts/smart_contracts/digital_marketplace/contract.py
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/contracts/python"
      - source: "templates/examples/contracts/digital_marketplace"
        data:
          language: python
      - source: "generators/create-devcontainer"
      - source: "generators/create-env-file"

  - id: algokit-learn
    project_name: "Algokit Learn"
    type: "frontend"
    author: "Algorand Foundation"
    title: "Algokit Learn"
    description: "A learning project for Algokit"
    tags:
      - nextjs
      - react
      - typescript
    features:
      - "Use Wallet Integration"
      - "Testnet Deployment"
      - "Transactions Sending"
    templates:
      - source: "templates/base/workspace-setup"
      - source: "templates/base/frontend/nextjs"
      - source: "templates/examples/frontend/ak-learn"
